version: '3.8'

services:
  backend:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    volumes:
      - ./tmp/sessions:/tmp/sessions
    ports:
      - "4000:4000"
    networks:
      - mi-red

  postgres:
    image: postgres:latest
    container_name: mi-postgres
    environment:
      POSTGRES_USER: usuario
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: base
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - mi-red

  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    volumes:
      - /home/ec2-user/certbot/etc:/etc/letsencrypt
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - mi-red

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - /home/ec2-user/certbot/etc:/etc/letsencrypt
      - /home/ec2-user/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 12h & wait $${!}; certbot renew --webroot -w /var/www/certbot --quiet; done;'"
    networks:
      - mi-red

networks:
  mi-red:
    driver: bridge

volumes:
  postgres-data:
